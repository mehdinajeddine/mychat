{"ast":null,"code":"var _jsxFileName = \"/Users/mehdinajeddine/Dropbox (VOID)/Mehdi/Perso/Reacteur/Formation/Serveur et database/tmp2/react-chat-components/samples/src/index.tsx\";\nimport React from \"react\";\nimport PubNub from \"pubnub\";\nimport ReactDOM from \"react-dom\";\nimport { PubNubProvider } from \"pubnub-react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ModeratedChat from \"./moderated-chat/moderated-chat\";\nimport \"./index.css\";\nimport users from \"../../data/users.json\";\n/**\n * Prepare a PubNub instance and inject it into PubNubProvider\n * You should generate your own keyset on pubnub.com and paste it into .env\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hash = document.location.hash.split(\"?\")[1];\nconst params = new URLSearchParams(hash);\nconst uuid = params.get(\"uuid\");\nconst pubnubKeys = {\n  publishKey: params.get(\"pubkey\") || process.env.REACT_APP_PUB_KEY,\n  subscribeKey: params.get(\"subkey\") || process.env.REACT_APP_SUB_KEY\n};\nconst pubnub = new PubNub({ ...pubnubKeys,\n  uuid: uuid || users[Math.floor(Math.random() * users.length)].id,\n  fileUploadPublishRetryLimit: 0\n});\n/** Detect PubNub access manager */\n\nlet pamEnabled = false;\npubnub.addListener({\n  status: function (status) {\n    if (status.category === \"PNAccessDeniedCategory\") {\n      pamEnabled = true;\n      renderApp();\n    }\n  }\n});\n\nconst SampleApps = () => {\n  return /*#__PURE__*/_jsxDEV(PubNubProvider, {\n    client: pubnub,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ModeratedChat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SampleApps;\n\nconst PamError = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pubnub-error\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Warning! PubNub access manager enabled.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"It looks like you have access manager enabled on your PubNub keyset. This sample app is not adapted to work with PAM by default.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You can either disable PAM in the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://dashboard.pubnub.com/\",\n        children: \"PubNub Admin Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \" or add custom code to grant all necessary permissions by yourself. Please referer to the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://pubnub.github.io/react-chat-components/docs/?path=/story/introduction-pam--page\",\n        children: \"Chat Component docs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", \"for more information.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PamError;\n\nconst KeysError = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pubnub-error\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"A PubNub account is required.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Visit the PubNub dashboard to create an account or login:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://dashboard.pubnub.com/\",\n        children: \"https://dashboard.pubnub.com/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \"Create a new app or locate your app in the dashboard. Enable the Presence, Files, Objects, and Storage features using a region of your choosing. For Objects, ensure the following are enabled:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"User Metadata Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Channel Metadata Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Membership Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Copy and paste your publish key and subscribe key into: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \".env\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"before continuing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = KeysError;\n\nconst renderApp = () => {\n  var _pubnubKeys$publishKe, _pubnubKeys$subscribe;\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: ((_pubnubKeys$publishKe = pubnubKeys.publishKey) === null || _pubnubKeys$publishKe === void 0 ? void 0 : _pubnubKeys$publishKe.length) && ((_pubnubKeys$subscribe = pubnubKeys.subscribeKey) === null || _pubnubKeys$subscribe === void 0 ? void 0 : _pubnubKeys$subscribe.length) ? pamEnabled ? /*#__PURE__*/_jsxDEV(PamError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SampleApps, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(KeysError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this), document.getElementById(\"root\"));\n};\n\nrenderApp();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SampleApps\");\n$RefreshReg$(_c2, \"PamError\");\n$RefreshReg$(_c3, \"KeysError\");","map":{"version":3,"sources":["/Users/mehdinajeddine/Dropbox (VOID)/Mehdi/Perso/Reacteur/Formation/Serveur et database/tmp2/react-chat-components/samples/src/index.tsx"],"names":["React","PubNub","ReactDOM","PubNubProvider","BrowserRouter","Switch","Route","ModeratedChat","users","hash","document","location","split","params","URLSearchParams","uuid","get","pubnubKeys","publishKey","process","env","REACT_APP_PUB_KEY","subscribeKey","REACT_APP_SUB_KEY","pubnub","Math","floor","random","length","id","fileUploadPublishRetryLimit","pamEnabled","addListener","status","category","renderApp","SampleApps","PamError","KeysError","render","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PubNub, { PubnubConfig } from \"pubnub\";\nimport ReactDOM from \"react-dom\";\nimport { PubNubProvider } from \"pubnub-react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport ModeratedChat from \"./moderated-chat/moderated-chat\";\nimport \"./index.css\";\n\nimport users from \"../../data/users.json\";\n\n/**\n * Prepare a PubNub instance and inject it into PubNubProvider\n * You should generate your own keyset on pubnub.com and paste it into .env\n */\n\nconst hash = document.location.hash.split(\"?\")[1];\nconst params = new URLSearchParams(hash);\nconst uuid = params.get(\"uuid\");\nconst pubnubKeys = {\n  publishKey: params.get(\"pubkey\") || process.env.REACT_APP_PUB_KEY,\n  subscribeKey: params.get(\"subkey\") || process.env.REACT_APP_SUB_KEY,\n};\nconst pubnub = new PubNub({\n  ...pubnubKeys,\n  uuid: uuid || users[Math.floor(Math.random() * users.length)].id,\n  fileUploadPublishRetryLimit: 0,\n} as PubnubConfig);\n\n/** Detect PubNub access manager */\nlet pamEnabled = false;\npubnub.addListener({\n  status: function (status) {\n    if (status.category === \"PNAccessDeniedCategory\") {\n      pamEnabled = true;\n      renderApp();\n    }\n  },\n});\n\nconst SampleApps = () => {\n  return (\n    <PubNubProvider client={pubnub}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <ModeratedChat />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </PubNubProvider>\n  );\n};\n\nconst PamError = () => {\n  return (\n    <div className=\"pubnub-error\">\n      <h1>Warning! PubNub access manager enabled.</h1>\n      <p>\n        It looks like you have access manager enabled on your PubNub keyset. This sample app is not\n        adapted to work with PAM by default.\n      </p>\n      <p>\n        You can either disable PAM in the{\" \"}\n        <a href=\"https://dashboard.pubnub.com/\">PubNub Admin Portal</a> or add custom code to grant\n        all necessary permissions by yourself. Please referer to the{\" \"}\n        <a href=\"https://pubnub.github.io/react-chat-components/docs/?path=/story/introduction-pam--page\">\n          Chat Component docs\n        </a>{\" \"}\n        for more information.\n      </p>\n    </div>\n  );\n};\n\nconst KeysError = () => {\n  return (\n    <div className=\"pubnub-error\">\n      <h1>A PubNub account is required.</h1>\n      <p>\n        Visit the PubNub dashboard to create an account or login:\n        <br />\n        <a href=\"https://dashboard.pubnub.com/\">https://dashboard.pubnub.com/</a>\n        <br />\n        Create a new app or locate your app in the dashboard. Enable the Presence, Files, Objects,\n        and Storage features using a region of your choosing. For Objects, ensure the following are\n        enabled:\n      </p>\n      <ul>\n        <li>User Metadata Events</li>\n        <li>Channel Metadata Events</li>\n        <li>Membership Events</li>\n      </ul>\n      <p>Copy and paste your publish key and subscribe key into: </p>\n      <pre>.env</pre>\n      <p>before continuing.</p>\n    </div>\n  );\n};\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      {pubnubKeys.publishKey?.length && pubnubKeys.subscribeKey?.length ? (\n        pamEnabled ? (\n          <PamError />\n        ) : (\n          <SampleApps />\n        )\n      ) : (\n        <KeysError />\n      )}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrenderApp();\n"]},"metadata":{},"sourceType":"module"}