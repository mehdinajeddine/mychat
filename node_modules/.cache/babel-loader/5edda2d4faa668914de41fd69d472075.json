{"ast":null,"code":"var _jsxFileName = \"/Users/mehdinajeddine/Dropbox (VOID)/Mehdi/Perso/Reacteur/Formation/Serveur et database/tmp2/react-chat-components/samples/src/moderated-chat/components/public-channels-modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { usePubNub } from \"pubnub-react\";\nimport { ChannelList } from \"@pubnub/react-chat-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * This modal is opened after clicking the \"plus\" icon next to the Channels header\n * It is used to create new join predefined public channels\n */\nexport const PublicChannelsModal = ({\n  groupChannelsToJoin,\n  setCurrentChannel,\n  hideModal\n}) => {\n  _s();\n\n  const pubnub = usePubNub();\n  const [channelsFilter, setChannelsFilter] = useState(\"\");\n\n  const joinGroupChannel = async channel => {\n    await pubnub.objects.setMemberships({\n      channels: [channel.id]\n    });\n    setCurrentChannel(channel);\n    hideModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"public-channels-modal modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Join a channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"material-icons-outlined\",\n          onClick: () => hideModal(),\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setChannelsFilter(e.target.value),\n          placeholder: \"Search in channels\",\n          type: \"text\",\n          value: channelsFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons-outlined\",\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Channels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        channels: groupChannelsToJoin.filter(c => {\n          var _c$name;\n\n          return (_c$name = c.name) === null || _c$name === void 0 ? void 0 : _c$name.toLowerCase().includes(channelsFilter);\n        }),\n        onChannelSwitched: channel => joinGroupChannel(channel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PublicChannelsModal, \"56+EKAR3vKDYx14FYd7DxuHQnns=\", false, function () {\n  return [usePubNub];\n});\n\n_c = PublicChannelsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicChannelsModal\");","map":{"version":3,"sources":["/Users/mehdinajeddine/Dropbox (VOID)/Mehdi/Perso/Reacteur/Formation/Serveur et database/tmp2/react-chat-components/samples/src/moderated-chat/components/public-channels-modal.tsx"],"names":["React","useState","usePubNub","ChannelList","PublicChannelsModal","groupChannelsToJoin","setCurrentChannel","hideModal","pubnub","channelsFilter","setChannelsFilter","joinGroupChannel","channel","objects","setMemberships","channels","id","e","target","value","filter","c","name","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,WAAT,QAA4B,+BAA5B;;;AAUA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAClCC,EAAAA,mBADkC;AAElCC,EAAAA,iBAFkC;AAGlCC,EAAAA;AAHkC,CAAD,KAIU;AAAA;;AAC3C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMU,gBAAgB,GAAG,MAAOC,OAAP,IAAgC;AACvD,UAAMJ,MAAM,CAACK,OAAP,CAAeC,cAAf,CAA8B;AAAEC,MAAAA,QAAQ,EAAE,CAACH,OAAO,CAACI,EAAT;AAAZ,KAA9B,CAAN;AACAV,IAAAA,iBAAiB,CAACM,OAAD,CAAjB;AACAL,IAAAA,SAAS;AACV,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,OAAO,EAAE,MAAMA,SAAS,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AACE,UAAA,QAAQ,EAAGU,CAAD,IAAOP,iBAAiB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CADpC;AAEE,UAAA,WAAW,EAAC,oBAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEV;AAJT;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEJ,mBAAmB,CAACe,MAApB,CAA4BC,CAAD;AAAA;;AAAA,4BACnCA,CAAC,CAACC,IADiC,4CACnC,QAAQC,WAAR,GAAsBC,QAAtB,CAA+Bf,cAA/B,CADmC;AAAA,SAA3B,CADZ;AAIE,QAAA,iBAAiB,EAAGG,OAAD,IAAaD,gBAAgB,CAACC,OAAD;AAJlD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA1CM;;GAAMR,mB;UAKIF,S;;;KALJE,mB","sourcesContent":["import React, { useState } from \"react\";\nimport { usePubNub } from \"pubnub-react\";\nimport { ChannelMetadataObject, ObjectCustom } from \"pubnub\";\nimport { ChannelList } from \"@pubnub/react-chat-components\";\n\ntype ChannelType = ChannelMetadataObject<ObjectCustom>;\n\ninterface PublicChannelsModalProps {\n  groupChannelsToJoin: ChannelType[];\n  setCurrentChannel: (channel: ChannelType) => void;\n  hideModal: () => void;\n}\n\n/**\n * This modal is opened after clicking the \"plus\" icon next to the Channels header\n * It is used to create new join predefined public channels\n */\nexport const PublicChannelsModal = ({\n  groupChannelsToJoin,\n  setCurrentChannel,\n  hideModal,\n}: PublicChannelsModalProps): JSX.Element => {\n  const pubnub = usePubNub();\n  const [channelsFilter, setChannelsFilter] = useState(\"\");\n\n  const joinGroupChannel = async (channel: ChannelType) => {\n    await pubnub.objects.setMemberships({ channels: [channel.id] });\n    setCurrentChannel(channel);\n    hideModal();\n  };\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"public-channels-modal modal\">\n        <div className=\"header\">\n          <strong>Join a channel</strong>\n          <button className=\"material-icons-outlined\" onClick={() => hideModal()}>\n            close\n          </button>\n        </div>\n        <div className=\"filter-input\">\n          <input\n            onChange={(e) => setChannelsFilter(e.target.value)}\n            placeholder=\"Search in channels\"\n            type=\"text\"\n            value={channelsFilter}\n          />\n          <i className=\"material-icons-outlined\">search</i>\n        </div>\n        <h2>Channels</h2>\n        <ChannelList\n          channels={groupChannelsToJoin.filter((c) =>\n            c.name?.toLowerCase().includes(channelsFilter)\n          )}\n          onChannelSwitched={(channel) => joinGroupChannel(channel)}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}